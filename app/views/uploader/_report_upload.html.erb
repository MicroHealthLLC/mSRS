<style>
  /* styles de base si JS est activé */
  .js .input-file-container {
    position: relative;
    width: 225px;
  }

  .js .input-file {
    position: absolute;
    top: 0; left: 0;
    width: 225px;
    padding: 14px 0;
    opacity: 0;
    cursor: pointer;
  }

  /* quelques styles d'interactions */
  .js .input-file:hover + .input-file-trigger,
  .js .input-file:focus + .input-file-trigger,
  .js .input-file-trigger:hover,
  .js .input-file-trigger:focus {
    background: #34495E;
    color: #39D2B4;
  }

  /* styles du retour visuel */
  .file-return {
    margin: 0;
  }
  .file-return:not(:empty) {
    margin: 1em 0;
  }
  .js .file-return {
    font-style: italic;
    font-size: .9em;
    font-weight: bold;
  }
  /* on complète l'information d'un contenu textuel
     uniquement lorsque le paragraphe n'est pas vide */
  .js .file-return:not(:empty):before {
    content: "Selected file: ";
    font-style: normal;
    font-weight: normal;
  }
</style>

<div data-toggle="modal" class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div data-toggle="modal" class="modal-dialog" role="document">
    <div data-toggle="modal" class="modal-content">
      <div data-toggle="modal" class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Upload Files</h4>
      </div>
      <div id="files" class="files col-xs-12" ></div>
      <div id="errors" style="color: red;" class="files col-xs-12" ></div>
      <%= form_for(@report, url: upload_document_channel_report_path(@channel, @report), method: :post, html: { class: 'form-horizontal' , method: :post,  :multipart => true, :id => "fileupload" }) do |f| %>
          <div data-toggle="modal" class="modal-body">
            <fieldset>
              <div class="form-group">
                <%= f.label t('document'), class: 'col-md-2 control-label' %>
                <div class="col-md-9">
                  <div class="upload-btn-wrapper">
                    <button class="btn">Upload a file</button>
                    <input id="fileupload" type="file" class="input-file" name="report[document]" />
                  </div>
                </div>
                <div class="col-md-12" style="text-align: center">
                  Or
                </div>
                <div class="col-md-12">
                  <label style="float: left">URL:  </label>
                  <%= text_field_tag :url, '', class: 'col-md-9 form-control' , style: 'width: 80%' %>
                  <%= f.submit :save, class: 'btn btn-primary', style: 'float: right' %>
                </div>
                <style>
                  .upload-btn-wrapper {
                    position: relative;
                    overflow: hidden;
                    display: inline-block;
                  }
                  .upload-btn-wrapper input[type=file] {
                    font-size: 100px;
                    position: absolute;
                    left: 0;
                    top: 0;
                    opacity: 0;
                  }
                </style>
              </div>
            </fieldset>
          </div>
          <div data-toggle="modal" class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
          </div>

      <% end %>
      </div>
</div>

<script id="template-upload" type="text/x-tmpl">
  <div class="upload">
  {%=o.name%}
  <div class="progress"> <div class="progress-bar progress-bar-success"></div>  </div>
  </div>
</script>


<script>
    // ajout de la classe JS à HTML
    $(document).ready(function(){
        document.querySelector("html").classList.add('js');

        // initialisation des variables
        var fileInput  = document.querySelector( ".input-file" ),
            button     = document.querySelector( ".input-file-trigger" )


        // action lorsque le label est cliqué
        $('#btn_upload_file').on( "click", function( event ) {
            fileInput.focus();
            return false;
        });

        /*jslint unparam: true */
        /*global window, $ */
        $(function () {
            'use strict';
            url: '<%= upload_document_channel_report_path(@channel, @report) %>';
            $('#fileupload').fileupload({
                dataType: 'script',
                add: function(e, data){
                    var uploadErrors = [];


                    if(data.originalFiles[0]['size'].length && data.originalFiles[0]['size'] > <%= Setting['spreadsheet_limit'].to_i.megabytes %>) {

                        uploadErrors.push('Filesize is too big');
                    }
                    if(uploadErrors.length > 0) {
                        alert(uploadErrors.join("\n"));
                    } else {
                        data.context = $(tmpl('template-upload', data.files[0]));
                        $('#files').append(data.context);
                        data.submit()
                    }

                },
                done: function (e, data) {
                    data.context.hide();
                },
                fail: function (e, data) {
                    $.each(data.messages, function (index, error) {
                        $('<p style="color: red;">Upload file error: ' + error + '<i class="elusive-remove" style="padding-left:10px;"/></p>')
                            .appendTo('#files');
                    });
                },
                progress: function (e, data) {
                    if( data.context)
                    {
                        var progress = parseInt(data.loaded / data.total * 100, 10);
                        data.context.find('.progress-bar').css(
                            'width',
                            progress + '%'
                        );
                    }

                }
            }).prop('disabled', !$.support.fileInput)
                .parent().addClass($.support.fileInput ? undefined : 'disabled');
        });
    })

</script>
